<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="10" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="77157" started-at="2019-01-22T03:49:22Z" finished-at="2019-01-22T03:50:39Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="77157" started-at="2019-01-22T03:49:22Z" finished-at="2019-01-22T03:50:39Z">
      <class name="lppackage.LpPoCTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:lppackage.LpPoCTest@5c3bd550]" name="beforeTest" is-config="true" duration-ms="14133" started-at="2019-01-22T14:49:22Z" finished-at="2019-01-22T14:49:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="verifyLandingPageTitle()[pri:0, instance:lppackage.LpPoCTest@5c3bd550]" name="verifyLandingPageTitle" duration-ms="8017" started-at="2019-01-22T14:49:36Z" finished-at="2019-01-22T14:49:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLandingPageTitle -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:lppackage.LpPoCTest@5c3bd550]" name="getResult" is-config="true" duration-ms="421" started-at="2019-01-22T14:49:44Z" finished-at="2019-01-22T14:49:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLandingPageTitle status=SUCCESS method=LpPoCTest.verifyLandingPageTitle()[pri:0, instance:lppackage.LpPoCTest@5c3bd550] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="enteringLEARNING_GOALS()[pri:1, instance:lppackage.LpPoCTest@5c3bd550]" name="enteringLEARNING_GOALS" duration-ms="7967" started-at="2019-01-22T14:49:45Z" finished-at="2019-01-22T14:49:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enteringLEARNING_GOALS -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:lppackage.LpPoCTest@5c3bd550]" name="getResult" is-config="true" duration-ms="388" started-at="2019-01-22T14:49:53Z" finished-at="2019-01-22T14:49:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enteringLEARNING_GOALS status=SUCCESS method=LpPoCTest.enteringLEARNING_GOALS()[pri:1, instance:lppackage.LpPoCTest@5c3bd550] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="verifyNoPracticeAssigned()[pri:3, instance:lppackage.LpPoCTest@5c3bd550]" name="verifyNoPracticeAssigned" duration-ms="3141" started-at="2019-01-22T14:49:53Z" finished-at="2019-01-22T14:49:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNoPracticeAssigned -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:lppackage.LpPoCTest@5c3bd550]" name="getResult" is-config="true" duration-ms="372" started-at="2019-01-22T14:49:56Z" finished-at="2019-01-22T14:49:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNoPracticeAssigned status=SUCCESS method=LpPoCTest.verifyNoPracticeAssigned()[pri:3, instance:lppackage.LpPoCTest@5c3bd550] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="assginPracticeVia_PRACTICE_ASSIGNMENT()[pri:4, instance:lppackage.LpPoCTest@5c3bd550]" name="assginPracticeVia_PRACTICE_ASSIGNMENT" duration-ms="5739" started-at="2019-01-22T14:49:56Z" finished-at="2019-01-22T14:50:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assginPracticeVia_PRACTICE_ASSIGNMENT -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:lppackage.LpPoCTest@5c3bd550]" name="getResult" is-config="true" duration-ms="359" started-at="2019-01-22T14:50:02Z" finished-at="2019-01-22T14:50:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=assginPracticeVia_PRACTICE_ASSIGNMENT status=SUCCESS method=LpPoCTest.assginPracticeVia_PRACTICE_ASSIGNMENT()[pri:4, instance:lppackage.LpPoCTest@5c3bd550] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="verifyNextPracticeHistSummary()[pri:5, instance:lppackage.LpPoCTest@5c3bd550]" name="verifyNextPracticeHistSummary" duration-ms="6263" started-at="2019-01-22T14:50:03Z" finished-at="2019-01-22T14:50:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNextPracticeHistSummary -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:lppackage.LpPoCTest@5c3bd550]" name="getResult" is-config="true" duration-ms="365" started-at="2019-01-22T14:50:09Z" finished-at="2019-01-22T14:50:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNextPracticeHistSummary status=SUCCESS method=LpPoCTest.verifyNextPracticeHistSummary()[pri:5, instance:lppackage.LpPoCTest@5c3bd550] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="drawOnCanvasWithPen()[pri:6, instance:lppackage.LpPoCTest@5c3bd550]" name="drawOnCanvasWithPen" duration-ms="6956" started-at="2019-01-22T14:50:09Z" finished-at="2019-01-22T14:50:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- drawOnCanvasWithPen -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:lppackage.LpPoCTest@5c3bd550]" name="getResult" is-config="true" duration-ms="414" started-at="2019-01-22T14:50:16Z" finished-at="2019-01-22T14:50:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=drawOnCanvasWithPen status=SUCCESS method=LpPoCTest.drawOnCanvasWithPen()[pri:6, instance:lppackage.LpPoCTest@5c3bd550] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="undoFunctionalities()[pri:7, instance:lppackage.LpPoCTest@5c3bd550]" name="undoFunctionalities" duration-ms="2165" started-at="2019-01-22T14:50:17Z" finished-at="2019-01-22T14:50:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- undoFunctionalities -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:lppackage.LpPoCTest@5c3bd550]" name="getResult" is-config="true" duration-ms="329" started-at="2019-01-22T14:50:19Z" finished-at="2019-01-22T14:50:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=undoFunctionalities status=SUCCESS method=LpPoCTest.undoFunctionalities()[pri:7, instance:lppackage.LpPoCTest@5c3bd550] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="zoomFunctionalities()[pri:8, instance:lppackage.LpPoCTest@5c3bd550]" name="zoomFunctionalities" duration-ms="3219" started-at="2019-01-22T14:50:19Z" finished-at="2019-01-22T14:50:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zoomFunctionalities -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:lppackage.LpPoCTest@5c3bd550]" name="getResult" is-config="true" duration-ms="343" started-at="2019-01-22T14:50:22Z" finished-at="2019-01-22T14:50:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=zoomFunctionalities status=SUCCESS method=LpPoCTest.zoomFunctionalities()[pri:8, instance:lppackage.LpPoCTest@5c3bd550] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="ChatFunctionality()[pri:9, instance:lppackage.LpPoCTest@5c3bd550]" name="ChatFunctionality" duration-ms="5073" started-at="2019-01-22T14:50:23Z" finished-at="2019-01-22T14:50:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChatFunctionality -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:lppackage.LpPoCTest@5c3bd550]" name="getResult" is-config="true" duration-ms="354" started-at="2019-01-22T14:50:28Z" finished-at="2019-01-22T14:50:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChatFunctionality status=SUCCESS method=LpPoCTest.ChatFunctionality()[pri:9, instance:lppackage.LpPoCTest@5c3bd550] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="submitingLEARNING_REFLECTION()[pri:10, instance:lppackage.LpPoCTest@5c3bd550]" name="submitingLEARNING_REFLECTION" duration-ms="7619" started-at="2019-01-22T14:50:28Z" finished-at="2019-01-22T14:50:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitingLEARNING_REFLECTION -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:lppackage.LpPoCTest@5c3bd550]" name="getResult" is-config="true" duration-ms="469" started-at="2019-01-22T14:50:36Z" finished-at="2019-01-22T14:50:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitingLEARNING_REFLECTION status=SUCCESS method=LpPoCTest.submitingLEARNING_REFLECTION()[pri:10, instance:lppackage.LpPoCTest@5c3bd550] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:lppackage.LpPoCTest@5c3bd550]" name="afterTest" is-config="true" duration-ms="3006" started-at="2019-01-22T14:50:36Z" finished-at="2019-01-22T14:50:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- lppackage.LpPoCTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
